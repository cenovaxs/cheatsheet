Setting di awal:
	git --version = check versi git
	git config --global user.name "Your Name" = memasukkan nama pengguna
	git config --global user.email "yourname@somemail.eu" = memasukkan email pengguna
	git config --list = lihat configurasi(setting) seperti melihat nama, email
	
bantuan:
	git help <verb> (cth git help config) atau 
	git <verb> --help (cth git config --help)
	
Mulai project git:
	git init = membuat folder git (hidden) di project dan jangan disentuh, kalau tidak mau pakai git tinggal hapus folder git
	touch .gitignore = buat git ignore file. git ignore membuat daftar file yang akan dihiraukan oleh git (ekslusi)
	    contoh isi .gitignore :
	    *.backup
	    testfile.txt
	    *.test
	git status = mengecek status git apakah aman atau ada yang baru dll

Staging

Tambah file ke staging:
	git add -A = tambah file ke staging
    atau git add . untuk (linux/mac/wsl2)
    git add namafile.typefile = untuk menambah file tertentu saja
	
    kemudian jangan lupa git status
	
Buang file dari staging ke working: 
	git reset = membuang semua file dari staging ke working 
	git reset somefile.js = buang hanya somefile.js saja dari staging ke working

Commiting

    git status untuk mengecek apakah ada file yang mau di commit

memindahkan file dari staging ke commit:
	git commit -m "penjelasan" = memindahkan file dari staging ke commit, -m itu berguna untuk menulis penjelasan cepat melalui terminal

Melihat perbedaan file:
	git diff

log:
	git log = melihat yang sudah dilakukan sekaligus melihat hash commit, pembuat, tanggal

Repository file (external)

Ambil repo dari github atau komputer lain: 
	git clone <url> <where to clone> = contoh git clone https://github.com/cenovaxs/cheatsheet/edit/main/Git ./folderlokal
    gak harus github.com bisa juga folder lain

melihat informasi tentang repo yang diambil dari luar:
	git remote -v = melihat nama repo dan alamat
	
Sebelum push harus pull terlebih dulu untuk mencek file terbaru di repo:
	git pull <namarepo> <namabranch> contoh git pull origin master
	
kemudian push:
	git push origin master - <origin> name of remote repo <master> the branch that we push to 

Branch

git branch -a = melihat info branch lokal dan repo

Membuat branch:
	git branch <namabranchbaru>

Pindah ke branch lain:
	git checkout <namebranchlain>

Push branch baru untuk pertama kali gunakan:
	git push -u origin <namabranchbaru> = - u bertujuan mensinkron branch yang baru dibuat dilokal ke repository

Menggabungkan branch:
	git checkout master
	git pull origin master
	git branch --merged = melihat informasi branch yang sudah di merge
	git merge <namabranch> = merge namabranch ke branch yang sedang di checkout dalam hal ini master, untuk git lokal 
	git push origin master = merge branch ke repository



membuang branch:
	git branch -d <namabranchyangmaudibuang> = membuang branch yang ada di lokal
	git branch -a 
	git push origin --delete <namabranchyangmaudibuang> = membuang branch yang ada di repo
