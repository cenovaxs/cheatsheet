$ sudo = menjalankan perintah sebagai root (unlimited access)
$ init 0 = shutdown
$ cat <file> = baca isi file ke dalam terminal
$ tac <file> = baca isi file terbalik dari line akhir ke line awal 
$ head <file> = baca 10 baris pertama dan masukkan ke dalam terminal
$ tail <file> = baca 10 baris pertama dan masukkan ke dalam terminal
-x $ head -x <file> = baca x baris pertama dan masukkan ke dalam terminal berlaku juga untuk tail
$ less <file> = baca isi file yang panjang kayak nano cuma gabisa diedit
$ touch file_name{1..3}.txt filename{a..d}.cpp = buat otomatis file_name1.txt, file_name2.txt, file_name3.txt, filenamea.ccp,filenameb.ccp,filenamec.ccp,filenamed.ccp
$ touch -t 202112091600 = mengganti waktu modified sebuah file ke waktu yang diinginkan dengan format "YYYYMMDDhhmm"
$ nano <text.file> = buat file dengan nama text.file, isi text file bisa diisi lewat nano
    contoh $ nano ./Documents/text.txt
$ info = lihat daftar panduan gnu alternatif man
$ info <x> = lihat panduan command x yang tertulis
    dalam info shortcut yang bermanfaat:
    n = next
    p = previous
    u = naik satu index ke parent
$ man <x> = liat panduan command x yang tertulis
$ man -f <x> = man --whatis x = whatis x = melihat info singkat ini program apa
$ man -k <x> = man --apropos x = apropos x = melihat info singkat program2 yang memiliki atau berhubungan dengan kata x
$ <command> -h = $ <command> --help = lihat opsi panduan
$ apropos "kata kunci" = cari command untuk hal yang berhubungan dengan kata kunci contoh $ apropos usb
$ echo "tulisan" = membuat tulisan menjadi output pada terminal
$ clear = clear screen
$ history = lihat history terminal
$ ls --help = lihat bantuan mirip dengan $ man ls
$ ls = lihat isi folder
$ ls <file> = perlihatkan hanya yang ada nama file tersebut
$ l = sama dengan ls
$ ls -a = (all) lihat termasuk hidden
$ ls -l = (long) lihat termasuk permission, jumlah subfolder, user, group, size, tanggal, nama
$ ls -p = urut berdasarkan filetype
$ ls -s = (size) urut berdasarkan file size
$ ls -i = (inode) menampilkan angka id file atau folder
$ ln <file1> <file2> = membuat link yaitu dua file dengan nama berbeda namun sebenarnya satu file
$ ln -s <filetarget> <fileshortcut> = membuat shortcut file target
    kalau gak mau ganti nama bisa tapi musti beda folder
        contoh $ ln -s ../text.txt .
$ pwd = posisi sekarang
$ tree = ngeliat directory semua tanpa GUI
$ cd = pindah folder
$ cd dir1/dir2 = langsung pindah 2 langkah ke dir2, bisa seterusnya dan bisa untuk semua command
? = single wildcard jadinya misalnya lupa namanya tp inget satu atau dua huruf pertama maka yang tidak diketahui bisa direplace dengan ?
* = wildcard mirip ? tapi tidak perlu tahu jumlah huruf kalau
[a-z] = regex untuk mencari huruf dalam file dengan alpabet 
[!a-z] = not regex untuk mencari nama yang tidak ada dalam alphabet
/ = root folder kalau ada didepan, folder berikutnya kalau tidak ada didepan 
. = current folder
.. = folder diatas
- = directory sebelumnya
~ = home working directory atau cd kosong aja juga balik ke home directory
!! = jalankan command sebelumnya
< $ 'program' < 'file.txt' = mengambil file.txt kemudian dijadikan input program
> = ambil output program dan overwrite jadi sebuah text file
$ 'program' 2> 'errorfile' = mengambil keterangan error menjadi sebuah file, kalau tidak error akan ditampilkan di terminal meskipun output > file.txt sudah menjadi file.txt
$ 'program' > 'all-output-file' 2>&1 = menyimpan output serta error ke dalam file
    atau yang lebih singkat
        $ 'program' >& 'all-output-file'
>> = ambil output program dan ditambahkan output ke dalam text file
& = membuat program berjalan di background
    contoh $ updatedb &
&& = kemudian jalankan perintah berikutnya
    contoh = mkdir ./folderbaru && touch text.txt
| pipe = pipe berguna untuk mengubah hasil jadi input command berikutnya
    contoh $ history | grep "x" | grep "y" = cari yang ada kata x dan y di dalam history
$ pushd <dir> = pindah ke dir namun disimpan dalam terminal supaya mudah kembali
$ popd <dir> = pindah ke dir sebelumnya dan hapus dari terminal
$ dirs = memperlihatkan daftar dir yang disimpan oleh pushd
$ mkdir <namafolder> = bikin folder
    -p atau --parents = bikin parent folder kalau belum ada ini kepake klo bikin folder di dalam folder dan belum ada foldernya
    contoh $ mkdir -p /home/pujas/belumadafolder1/belumadafolder2/file
$ rm <namafile >= delete file
$ rm -i <namafile> = interactive mode berarti ada pertanyaan are u sure? biasanya dipakai kalau ada banyak file sekaligus
$ rm -r <namafolder> = delete folder dan seluruh isinya
$ rm ./* = delete isi folder saja atau $ rm Documents/* = delete semua file yang ada di dalam folder Documents
$ rm ./*.txt = delete semua yang ada .txt
$ mv <file/folderyangmaudipindah> <foldertujuan> = ganti nama atau pindah lokasi kalau sudah ada foldernya
$ open <namafile> = buka file menggunakan default program
$ cp <fileyangmaudicopy> <namafilehasilcopy> = copy
$ cp <{file1,file2}> <lokasihasilcopy> = copy beberapa file bersamaan 
$ cp -r <namafolder> <namafolderhasilcopy> = copy folder dan seluruh isinya
$ lsb_release -a = mengecek versi os
$ uname -a = check nama komputer
$ whoami = check siapa saya
$ who = check siapa lagi yang login selain saya
$ echo $HOME = check dimana home directory
$ echo $PS1 = lihat sistem penamaan prompt dalam terminal
$ groups = check grup apa
$ which <command> = cari lokasi command musti pake sudo contoh $ which ls
$ where <command> = cari dimana lokasi command tersebut
$ ps = info tentang bash/powershell/zsh
$ id = info tentang user
$ hostname = info hostname
$ uname -a = info tentang os dan system
$ date = melihat waktu
$ ss = alat untuk lihat socket,session
$ env = menjalankan program dalam lingkungan yang dimodif
$ lsblk = list harddrive
$ lsusb = list usb
$ lsof = list openfile
$ exit = keluar dari terminal
/tmp$ xpdyinfo | grep dim = lihat dimensi layar menggunakan cli

Networking
$ ip = info dan ganti network
$ ping 8.8.8.8 atau $ ping google.com = ping ke google
$ ifconfig = check ip komputer
$ tcpdump = kayak wireshark di linux
-c $ tcpdump -c <x> = ambil sejumlah x packet jaringan pertama
-A $ tcpdump -A = tampilkan dalam bentuk format aslinya
$ traceroute <iptarget/url> = check route ip
$ tcpdump -c <x> -A <wl01> = seperti sebelumnya namun fokus hanya pada interface yg dipilih dalam hal ini wifi aja
-XX $ tcpdump -XX -i <wl01>  = tampilkan dalam bentuk hex dan asci format
$ tcpdump -i <wl01> port <xxxx> = target ke port tertentu saja
$ netstat = aplikasi buat liat jaringan network
$ netstat -nr = perlihatkan berdasarkan network (arp)
$ netstat -i = perlihatkan berdasarkan interface (wireless/lan/loop)
$ netstat -ta = perlihatkan berdasarkan active socket
$ netstat -tan = perlihatkan berdasarkan active socket dan tampilkan dalam ip address
$ nmap <iptarget> = perlihatkan open port
-v (verbose) $ nmap = (verbose = lengkap) perlihatkan juga proses pencarian open port
, $ nmap <192.168.2.1,76,xx> = memperlihatkan beberapa device dalam satu command
$ nmap <192.168.2.*> = memperlihatkan semua device dalam satu dhcp
$ nmap google.com = bisa juga nmap untuk website
-iL $ nmap -iL /dir/file.txt = bisa juga jalankan nmap dari file
contoh format file.txt :
google.com 
192.168.2.1
-sP $ nmap -sP <192.168.10.1/24>

$ arp -a = check arp (ip dan mac yang terdaftar di komp)

repository debian dpkg
$ apt = versi lebih baru dan bagus hanya untuk debian
$ apt update kemudian $ apt install <aplikasi> = hanya mengupdate aplikasi tertentu
$ apt upgrade
$ apt autoremove = membuang file yang sudah tidak dipakai setelah upgrade
$ apt full-upgrade = menjalankan apt upgrade dan apt autoremove
$ apt-get = command untuk install tapi sudah kuno diganti dengan yang baru yaitu apt
$ apt-get install <aplikasi> = install aplikasi
$ apt-get remove <aplikasi> = uninstall aplikasi
$ apt-get purge <aplikasi> = uninstall dan hapus
$ sudo apt-get autoremove --purge <aplikasi> = membuang program seluruhnya dan membuang dependencies juga
$ sudo apt-get update = check update
$ sudo apt-get upgrade = mendonload dan upgrade hasil check update
$ sudo apt-get update && apt-get upgrade = update kemudian upgrade dalam satu line
$ apt-cache search <x> = buat cari file program yang terinstall kata kunci x
    atau bisa juga $ apt search <x> = versi yang lebih baru
$ apt-cache policy <x> = liat versi aplikasi x
    atau $ apt policy <x>
$ sudo dpkg -i lokasifile/namafile = install dpkg melalui terminal
untuk membersihkan installer yang rusak
$sudo apt-get clean && sudo apt-get autoremove
    atau bisa juga
        $ apt clean && apt autoremove
    kemudian
$sudo apt-get -f install = menginstall aplikasi yang corrup. -f = fix
    atau
        $ apt -f install
$dpkg --configure -a

User admin
$ su <userlain> = ganti user
$ su - <userlain> = dan ke home folder user tersebut
$ sudo su = sudo root = ganti jadi root
$ sudo visudo = buka file daftar user yang bs jadi sudo 
contoh : pujas All = All (untuk jadiin root) atau pujas All = /sbin/adduser (kalau cuma mau kasih satu perintah)
$ sudo adduser <namauserbaru> = tambah atau buat user account baru
$ sudo adduser <namauserbaru> sudo = tambah atau buat user account baru yang bisa akses sudo
$ sudo deluser <namauser> = menghapus user
$ sudo passwd <namauser> = ganti password user
$ sudo addgroup <namagrup> = buat grup baru lebih user friendly
$ sudo groupadd <namagrup> = buat grup baru
$ sudo groupdel <grup> = del grup
$ sudo adduser <namauserbaru> <namagrup> = tambah user baru dan tambah ke grup
$ sudo useradd <namauserbaru> = tambah user tapi cuma gitu aja sebaiknya gak pakai
$ sudo useradd <namauserbaru> -m = tambah user dan buat home directory 
$ sudo usermod <namauser> --shell /bin/bash = ganti pass ke bash
$ sudo usermod -l <namauserbaru> <namauserlama> = ganti nama user
$ sudo usermod -aG <namagrupyangmauditambah> <useryangmaudimasukin> = tambahin user ke grup baru
$ sudo userdel <namauser> = hapus user tapi sebaiknya jangan dipakai
$ sudo gpasswd -d <user> <group> = mengeluarkan user dari group

permission 
$ sudo chown <user>:<group> <file.txt> = ganti owner
$ sudo chown -R <user>:<group> <./Dir> = -R berarti ganti beserta isi yang ada di dalam folder dir
drwxrwxrwx = huruf 1 d kalau folder kalau file dia -, huruf 2-4 permission untuk owner, huruf 5-7 permission untuk group, huruf 8-0 permission untuk (publik) yang lain
1234567890
$ sudo chmod 644 <file.txt> = ganti file permission 4 read only, 6 read n write, angka pertama untuk owner, angka kedua untuk group, angka ketiga untuk publik

info lanjut jumlah saja dibawah untuk mendapatkan kombinasi chmod yang diinginkan
r (read) – 4
w (write) – 2
x (execute) – 1
    atau
$ sudo chmod ugoa+-rwx 
    u = user
    g = user lain yang ada di group
    o = user lain yang tidak ada di group
    a = semua user
        kalau dikosongin maka default = a / semua user
    + = tambah mode
    - = kurang mode
        contoh sudo chmod go-w = membuat user lain untuk tidak bisa mengedit

find = cari file dan folder di linux 
 
$ find = kasih lihat semua file dan folder di current directory (bisa pake titik atau ngak sama aja)
$ find / = cari semua file dalam satu komputer
$ find namadirectory/dir2/dll = kasih lihat semua file dan folder di directory yang dipilih
contoh kombinasi $ find /etc -type f -iname "file.txt"
$ find . -type d = kasih lihat semua folder aja
$ find . -type f = kasih lihat semua file aja
$ find . -type f -name "<file.typefile>" = mencari file.filetype di dalam current directory
$ find . -type f -name "<file*>" = * berarti bisa apapun sehingga hasilnya mencari semua file yang ada kata "file" di dalam namanya
$ find . -type f -iname "<file*>" = i berarti case insensitive berarti mau huruf besar atau kecil tetap dicari
$ find . -type f -iname "<*.filetype>" = mencari berdasarkan tipe filenya
$ find . -type f -iname -not "<file>" = mencari yang bukan file tersebut
$ find . -type f -iname -mmin -x = cari file yang dimodif dalam waktu kurang dari x menit terakhir
$ find . -type f -iname -mmin +y = cari file yang dimodif dalam waktu lebih dari y menit
$ find . -type f -iname -mmin -x +y = cari file yang dimodif dalam waktu kurang dari x menit terakhir dan lebih dari y menit
$ find . -type f -iname -mtime -x = cari file yang dimodif dalam waktu kurang dari x hari terakhir
    contoh $ find . -mtime 0 = cari file yang dimodif hari ini atau kurang dari sehari
$ find . -type f -iname -ctime -x = idem tapi waktu terakhir changed bukan modif perebedaan modif dengan change modif itu isinya, kalau change bisa jadi cuma permission tapi isinya gak berubah
$ find . -type f -iname -atime -x = idem tapi waktu terakhir dibaca atau dibuka (last read)
$ find . -size +xM = cari file yang besarnya lebih dari x MB 
$ find . -size -yM = cari file yang besarnya kurang dari y MB 
$ find . -size +xK = x kilobite
$ find . -size +xG = x Gigabite
$ find . -empty = cari file kosong yang gak ada isinya
$ find . -perm xxx = cari file berdasarkan permission, xxx = nilai permission contoh 777
    untuk find -ok ataupun exec di paling belakang harus ada placeholder {} yang berfungsi sebagai hasil untuk digunakan (mirip piping) kemudian harus ada penutup \; atau ';' atau +
$ find . -ok <perintah> \;= seperti exec tapi dia ada pertanaan r u sure? supaya bisa cek satu persatu file
$ find . -exec chown = eksekusi perintah dalam ini contohnya chown atau ganti pemilik
$ find . -exec chown <user>:<grup> {} + = ganti user dan grup file yang dicari kemudian harus pakai placeholder untuk hasil {} dan perintah selesai dengan + atau \; 
$ find . -type d -exec chown <775> {} + = ganti permission ke 775 (contoh) semua folder yang ditemukan
$ find . -type f -iname "<*.filetype>" -maxdepth 1 = cari berdasarkan filetype hanya di folder ini (maxdepth 1) kalau (maxdepth 2) berarti dengan subfolder berikutnya dan seterusnya maxdepth x
$ find . -delete = menghapus semua file yang ditemukan

$ grep = cari kata dalam file

$ grep "<kata yang dicari>" <namafile.filetype> = cari semua kata yang ada di dalam file
contoh $ grep "john williams" names.txt
-w $ grep -w "<kata yang dicari>" <namafile.filetype> = hanya ambil yang sama persis
contoh klo ada johny sementara kata kunci yang dignakan john maka johny tidak tercari
-i (insensitive) $ grep -wi "<kata yang dicari>" <namafile.filetype> = huruf kapital atau bukan tetap diambil
-n (line) $ grep -win "<kata yang dicari>" <namafile.filetype> = tampilkan jumlah baris dimana angka tersebut berada
-B $ grep -win -B x "<kata yang dicari>" <namafile.filetype> = tampilkan sejumlah x line sebelumnya juga
-A $ grep -win -A x "<kata yang dicari>" <namafile.filetype> = tampilkan sejumlah x line setelahnya juga
-C $ grep -win -C x "<kata yang dicari>" <namafile.filetype> = tampilkan sejumlah x line sebelum dan setelahnya juga
$ grep -win "<kata yang dicari>" ./*.txt = mencari dalam folder tertentu
-r $ grep -winr "<kata yang dicari>" ./*.txt = mencari dalam folder dan subfoldernya
-l $ grep -wirl "<kata yang dicari>" . = hanya tampilkan nama file dan folder yang ditemukan
-c $ grep -wirc "<kata yang dicari>" . = tampilkan berapa kali nama tersebut berulang

- exec = mengeksekusi hasil dari perintah pertama kemudian menjalan perintah kedua
$ find . -type f -iname "*.filetype" -maxdepth x -exec rm {} + = delete semua file dari hasil pencarian
$ find . -type f -iname "*.filetype" -exec grep -i -n "function" {} + = cari kata tertentu dari hasil file yang dicari

tee file.txt = mengambil output dari perintah sebelumnya kemudian ditampilkan pada terminal dan di safe dalam file.txt
-a (append) $ tee -a file.txt = menambah hasil output ke dalam file 

$ find . -type f -size -10k -iname "*" -exec grep -tn "sandwich" {} + | tee f.txt
= hasil dari find file dan grep diatas ditampilkan dalam terminal dan disimpan dalam file f.txt

> arrow = hasil tidak ditampilkan di terminal melainkan di safe menjadi file.txt
contoh $ ls > file.txt = menyimpan hasil ls ke dalam file.txt
contoh $ find . -type f -size -10k -iname "*" -exec grep -tn "sandwich" {} + > f.txt
= hasil dari find file dan grep diatas disimpan dalam file f.txt

Regex posix grep
. = apapun kayak bintang di terminal contoh:
$ grep "...-...-...." text.txt = hasil yang didapat contohnya 123-456-7891
Regex perl -P (python regex) grep
-P $ grep -P "\d{3}-\d{3}-\d{4}" names.filetype = hasil yang didapat contohnya 123-456-7891
untuk mengaktifkan grep -P harus grep version gnu klo blum upgrade atau download dulu, untuk mac pake $ brew install grep --with-default-names
bisa dikombinasi dengan yang lainya contohnya $ grep -wirlP "\d{3}-\d{3}-\d{4}" names.filetype

curl
curl -i http://..... = menjalankan curl untuk melihat server

rsync membuat duplikate file atau folder untuk kepentingan backupnya
$ rsync <folderyangmaudibackup/*> <backupfolder/>
-r = $ rsync -r <folderyangmaudibackup/> <backupfolder/> = recursif copy termasuk folder yang di falamnya
tanpa/ = $ rsync -r <folderyangmaudibackup> <backupfolder/> = tanpa / dibelakang maka bikin folder di dalam backupfolder
-a = archive (termasuk permission dll)
-v = verbose
--dry-run = $ rsync -av --dry-run <folderyangmaudibackup/> <backupfolder/> = memperlihatkan file apa saja yang akan dicopy, untuk melihatnya jangan lupa -v verbose
--delete = $ rsync -av --delete <folderyangmaudibackup/> <backupfolder/> = membuang file yang tidak ada di folder yang mau dibackup. Harus hati2 karena bisa menghapus file backup
-z = compress file
-p = kasih lihat progress


SSH dan ssh dengan keygen

$ ssh -V = check versi ssh
kalo stuck karena pernah ssh ke komp lain: $ ssh-keygen -R 192.168.x.yyy (x.yyy ip komp target baru)
$ ssh-keygen = buat ssh key
    -t $ ssh-keygen -t rsa = type rsa
    -b $ ssh-keygen -b 4096 = bite semakin banyak maka semakin secure 
$ ssh-add ~/.ssh/<privatekeybaru> = tambah ssh key baru apabila ada ssh key yang lain
    kalau keluar "could not open a connection to your authentication agent
        $ eval `ssh-agent -s` = mengaktifkan ssh agent dan agent memberikan kita id
        kemudian baru ssh-add ~/.ssh<privatekeybaru> 
$ ssh username@targetip = login ke pc lain menggunakan ssh
$ scp ~/folder/file.filetype username@targetip:/folder/namafileyangdicopy.filetype = copy file dari satu komp ke komp lain menggunakan ssh
contoh $ scp ~/.ssh/id_rsa.pub coreyms@192.168.56.100:/home/coreyms/.ssh/uploaded_key.pub
setelah dicopy filenya, file harus append ke file baru
$ cat ~/folder/file.filetype >> ~/foler/filebaru
contoh $ cat ~/.ssh/uploaded_key.pub >> ~/.ssh/authorized_keys
folder harus dalam permission 700 cara gantinya :
$ chmod 700 folder 
contohnya $ chmod 700 ~/.ssh/
file harus dalam permission 600 cara gantinya :
$ chmod 600 file 
contohnya $ chmod 600 ~/.ssh/*
kemudian untuk lebih aman matikan ssh dengan menggunakan password dengan cara mengedit config ssh yang ada di (linux : /etc/ssh/sshd_config) sebaiknya dicopy dulu backupnya dengan cara:
$ cp /etc/ssh/sshd_config /etc/ssh/sshd_config.bak
ganti #PasswordAuthentication yes menjadi PasswordAuthentication no (jangan lupa hilangkan hastag)
setelahnya restart $ sudo service ssh restart
    atau
    $ sudo systemctl reload sshd

    cara gampang yang otomatis

$ ssh-copy-id <username>@<iptarget> = langsung copy otomatis ga usah pake yang diatas kemudian masukin password sekali aja untuk pertama kali kemudian otomatis
contoh $ ssh-copy-id coreyms@192.168.58.101

    ssh ke github
pertama harus buat keygen baru dengan server yang buat bukan pc kita, kalau gak bisa maka folder ssh harus chown ke user yang buat key
kemudian file.pub dicopy ke github dan kemudian git clone

proses
$ top = task manager dalam terminal realtime
$ top | head = melihat ringkasan top hanya 10 line teratas
    shortcut dalam top :
        1 = memperlihatkan per thread atau per core
        t = menyederhanakan thread atau core
        m = menyederhanakan memory
        A = mengatur berdasarkan penggunaan terbanyak
        r = renice ganti prioritas
        k = kill spesific proses
        f = list configurasi 
        o = interactively select new set order
ps = process status (kayak top tapi gak live)
$ ps aux (BSD syntax) = lihat semua process dalam terminal offline 
-a. View processes of all users rather than just the current user.
-u. Provide detailed information about each of the processes
-x. Include processes that are controlled not by users but by daemons.
$ ps -e (standart syntax) = lihat semua process
$ ps -eLF = lihat info per thread
$ ps axo <custom1,custom2,....> = memperlihatkan berdasarkan pilihan sendiri lihat man ps biar jelas
$ ps aux | grep <namayangdicari> = menfilter hasil dengan hanya menampilkan namayangdicari
$ pgrep <namaprogram> = menampilkan PID proses id program yang dicari, kalau program yang sama jalan lebih dari satu maka pid juga lebih dari satu, urutan menurut waktu jadi yang dibuka pertama akan ada diatas sementara yang terakhir akan ada dibelakang
$ pstree = memperlihatkan proses dengan tree jadi kelihatan parent childrennya 
?$ pkill <namaprogram> = mematikan proses berdasarkan namaprogram
$ kill <pid1> <pid2> = mematikan proses berdasarkan id bisa beberapa sekaligus
$ kill -9 <pid> = $ kill -SIGKILL <pid> = mematikan proses meskipun unresponsive
contoh $ kill -9 6300 = mematikan proses dengan id 6300
$ killall <namaprogram> = mematikan semua program berdasarkan nama program
$ renice <ni> <pid> = mengubah prioritas process ni berkisar -20 sampai +19 dengan -20 paling utama dan +19 paling rendah
$ jobs = kasih liat background process
$ jobs -l = lebih lengkap ada pid
$ w = ngeliat pemakaian komp dalam beberapa menit terakhir
    format baca : load average <1_menit_terakhir> <5menit> <15menit>
    kalau core 1 maka 100%=1.0 kalau 4 core maka 100%= 4.0 kalau lebih dari jumlah core berarti pemakaian besar sehingga ngantri
$ uptime = lihat komputer sudah nyala berapa lama
CTRL-Z = menghentikan sementara program yang berjalan di terminal
$ bg = membuat file berjalan di background (berguna apabila mau menjalankan aplikasi lain tapi sebelumnya harus CTRL-Z untuk disetop dulu)
$ fg = membuat file berjalan di foreground (terminal terhenti)


service atau systemctl = menjalankan servis pilih salah satu antaranya saja tapi disarankan systemctl
$ sudo service <namaprogram> start = menjalankan service
$ sudo service <namaprogram> stop = menghentikan service
$ sudo service <namaprogram> restart = merestart service
$ sudo systemctl start <namaprogram> = menjalankan systemctl
$ sudo systemctl stop <namaprogram> = menghentikan systemctl

crontabs
$ crontab -e = buka crontab
format = m h dom mon dow command :
m = menit <0-60>
h = jam <0-24>
dom = hari <1-31>
mon = bulan <1-12>
dow = hari dari minggu <0-7> 0 dan 7 = minggu
command = perintah yang akan dijalankan saat waktu tersebut
contoh : 
15 14 * * * ls > /home/nick/lt/cronres.txt = command akan dijalankan setiap jam 14.15 setiap hari
$ sudo crontab -e = buka crontab dengan root

File penting dalam linux
$ /etc/passwd
$ /etc/hosts 
$ /etc/shadow
$ /etc/group
$ /etc/network
$ /etc/init.d/<daemon> <option> = lokasi file menjalankan daemon (cthnya ssh) dengan option : start,stop,reload,restart,force-reload
$ /etc/netplan = didalam folder tersebut terdapat yaml file yang bisa buat ganti default gateway, dns
    check type os dari etc = $ cat /etc/*issue
    check versi os dari etc = $ cat /etc/*release
    check nama host dari etc = $ cat /etc/hostname
    check nama os dan versi dari proc =$ cat /proc/version
    check processor dari proc = $ cat /proc/cpuinfo
    check uptime dari proc = $ cat /proc/uptime
    dll /proc/interrupts
        /proc/meminfo
        /proc/mounts
        /proc/partitions
    check dns = $ systemd-resolve --status
        
membuat command sendiri
buka file .bashrc di home 
    > cari space kosong di setelah if not running interactively tepatnya dibawah esac dan kasih spasi
        > tulis "alias <namacommandbuatan>='<perintah>'"
        contohnya = "alias winhome='cd /mnt/e/pujas/programing'"

Wsl2
$ explorer.exe . = membuka linux wsl2 dengan windows explorer

Ubuntu

Keyboard Mouse Trackpad / touchpad matiin Nyalain ubuntu
$ xinput list = lihat hardware yang mau dimatiin atau nyalain
$ xinput set-prop 15 "Device Enabled" 0 = matiin trackpad
$ xinput set-prop 15 "Device Enabled" 1 = nyalain trackpad

setting default application ubuntu 20
Settings->Default Applications

nautilus (file manager)
CTRL-1 or CTRL-2 = ganti list view dan tumbnailview
CTRL-L = shortcut ke directory text box
CTRL-DEL = shortcut buang file
ALT-F2 = run command

Lock screen ubuntu dan linux
Windows-L
CTRL-ALT F3-F6 = buka virtual terminal dari 3-6 ada 6 channel
CTRL-ALT F1-F2 = kembali ke ubuntu
$ systemctl start gdm = menjalankan GUI 
    atau
    $ telinit 5
$ systemctl start gdm = mematikan GUI
    atau
    $ telinit 3

        Methods of bringing down the GUI:
            student:/tmp> sudo systemctl stop gdm
            student:/tmp> sudo systemctl stop lightdm
            student:/tmp> sudo telinit 3

        Methods of bringing the GUI back up:
            student:/tmp> sudo systemctl start gdm
            student:/tmp> sudo systemctl start lightdm
            student:/tmp> sudo telinit 5
$ shutdown -r = restart komp
$ shutdown -h = halt dan matikan komp

Program penting install debian

apt install lsb_release
apt install nmap
apt install net-tools = ifconfig
apt install iputils-ping = ping
apt install dnsutils = nslookup
apt install checkinstall = klo ada program yang ga bisa di install di repo