$ sudo = menjalankan perintah sebagai root (unlimited access)
$ init 0 = shutdown
$ cat <file> <file2> = baca kedua isi file secara berurutan ke dalam terminal
$ cat > <file> = semua yang diketik bakal dimasukkan ke dalam file sampai CTRL-D dipencet
$ tac <file> = baca isi file terbalik dari line akhir ke line awal
$ head <file> = baca 10 baris pertama dan masukkan ke dalam terminal
$ tail <file> = baca 10 baris pertama dan masukkan ke dalam terminal
$ tail -f <file> = baca file yang lognya berjalan terus live, jadi klo ada update langsung muncul juga updatenya
-x $ head -x <file> = baca x baris pertama dan masukkan ke dalam terminal berlaku juga untuk tail
$ less <file> = baca isi file yang panjang kayak nano cuma gabisa diedit
$ touch file_name{1..3}.txt filename{a..d}.cpp = buat otomatis file_name1.txt, file_name2.txt, file_name3.txt, filenamea.ccp,filenameb.ccp,filenamec.ccp,filenamed.ccp
$ touch -t 202112091600 = mengganti waktu modified sebuah file ke waktu yang diinginkan dengan format "YYYYMMDDhhmm"
$ nano <text.file> = buat file dengan nama text.file, isi text file bisa diisi lewat nano
    contoh $ nano ./Documents/text.txt
$ info = lihat daftar panduan gnu alternatif man
$ info <x> = lihat panduan command x yang tertulis
    dalam info shortcut yang bermanfaat:
    n = next
    p = previous
    u = naik satu index ke parent
$ man <x> = liat panduan command x yang tertulis
$ man -f <x> = man --whatis x = whatis x = melihat info singkat ini program apa
$ man -k <x> = man --apropos x = apropos x = melihat info singkat program2 yang memiliki atau berhubungan dengan kata x
$ <command> -h = $ <command> --help = lihat opsi panduan
$ apropos "kata kunci" = cari command untuk hal yang berhubungan dengan kata kunci contoh $ apropos usb
$ echo "tulisan" = membuat tulisan menjadi output pada terminal
$ clear = clear screen
$ history = lihat history command di terminal
CTRL-R = cari history command di terminal
CTRL-A = ke awal huruf pada terminal
CTRL-E = ke akhir huruf pada terminal
$ ls --help = lihat bantuan mirip dengan $ man ls
$ ls = lihat isi folder
$ ls <file> = perlihatkan hanya yang ada nama file tersebut
$ l = sama dengan ls
$ ls -a = (all) lihat termasuk hidden
$ ls -l = (long) lihat termasuk permission, jumlah subfolder, user, group, size, tanggal, nama
$ ls -p = urut berdasarkan filetype
$ ls -s = (size) urut berdasarkan file size
$ ls -i = (inode) menampilkan angka id file atau folder
$ \ls matiin warna dari ls
$ ln <file1> <file2> = membuat link yaitu dua file dengan nama berbeda namun sebenarnya satu file
$ ln -s <filetarget> <fileshortcut> = membuat shortcut file target
    kalau gak mau ganti nama bisa tapi musti beda folder
        contoh $ ln -s ../text.txt .
$ pwd = posisi sekarang
$ tree = ngeliat directory semua tanpa GUI
$ df -h = liat disk usage semuanya
$ cd = pindah folder
$ cd dir1/dir2 = langsung pindah 2 langkah ke dir2, bisa seterusnya dan bisa untuk semua command
? = single wildcard jadinya misalnya lupa namanya tp inget satu atau dua huruf pertama maka yang tidak diketahui bisa direplace dengan ?
* = wildcard mirip ? tapi tidak perlu tahu jumlah huruf kalau
[a-z] = regex untuk mencari huruf dalam file dengan alpabet 
[!a-z] = not regex untuk mencari nama yang tidak ada dalam alphabet
/ = root folder kalau ada didepan, folder berikutnya kalau tidak ada didepan 
. = current folder
.. = folder diatas
- = directory sebelumnya
~ = home working directory atau cd kosong aja juga balik ke home directory
!! = jalankan command sebelumnya
< $ 'program' < 'file.txt' = mengambil file.txt kemudian dijadikan input program
<< = seperti diatas cuma dia bisa multiple line bisa digunakan untuk simpen file tanpa text editor
> = ambil output program dan overwrite jadi sebuah text file
>> = ambil output program dan ditambahkan output ke dalam text file
& = membuat program berjalan di background
    contoh $ updatedb &
&& = kemudian jalankan perintah berikutnya
    contoh = mkdir ./folderbaru && touch text.txt
| pipe = pipe berguna untuk mengubah hasil jadi input command berikutnya
    contoh $ history | grep "x" | grep "y" = cari yang ada kata x dan y di dalam history
$ pushd <dir> = pindah ke dir namun disimpan dalam terminal supaya mudah kembali
$ popd <dir> = pindah ke dir sebelumnya dan hapus dari terminal
$ dirs = memperlihatkan daftar dir yang disimpan oleh pushd
$ mkdir <namafolder> = bikin folder
    -p atau --parents = bikin parent folder kalau belum ada ini kepake klo bikin folder di dalam folder dan belum ada foldernya
    contoh $ mkdir -p /home/pujas/belumadafolder1/belumadafolder2/file
$ rm <namafile >= delete file
$ rm -i <namafile> = interactive mode berarti ada pertanyaan are u sure? biasanya dipakai kalau ada banyak file sekaligus
$ rm -r <namafolder> = delete folder dan seluruh isinya
$ rm ./* = delete isi folder saja atau $ rm Documents/* = delete semua file yang ada di dalam folder Documents
$ rm ./*.txt = delete semua yang ada .txt
$ mv <file/folderyangmaudipindah> <foldertujuan> = ganti nama atau pindah lokasi kalau sudah ada foldernya
$ open <namafile> = buka file menggunakan default program
$ cp <fileyangmaudicopy> <namafilehasilcopy> = copy
$ cp <{file1,file2}> <lokasihasilcopy> = copy beberapa file bersamaan 
$ cp -r <namafolder> <namafolderhasilcopy> = copy folder dan seluruh isinya
$ lsb_release -a = mengecek versi os
$ uname -a = check nama komputer, os, kernel
$ whoami = check current user
$ echo $USERNAME = idem diatas
$ who -a = check siapa lagi yang login selain saya
$ echo $HOME = check dimana home directory
$ echo $PS1 = lihat sistem penamaan prompt dalam terminal
$ groups = check grup apa
$ which <command> = cari lokasi command musti pake sudo contoh $ which ls
$ where <command> = cari dimana lokasi command tersebut
$ ps = info tentang bash/powershell/zsh
$ echo $SHELL = dimana lokasi shell
$ id = info semua id user dan grup sebuah user 
$ groups <user> = melihat grup yang dimiliki user
$ hostname = info hostname
$ uname -a = info tentang os dan system
$ echo XDG_CURRENT_DESKTOP = info desktop environment (Gnome/KDE/dll)
$ date = melihat waktu
$ ss = alat untuk lihat socket,session
$ env = menjalankan program dalam lingkungan yang dimodif
$ lsblk = list harddrive
$ lsusb = list usb
$ lsof = list openfile
$ exit = keluar dari terminal
/tmp$ xpdyinfo | grep dim = lihat dimensi layar menggunakan cli

Networking
$ nmcli = melihat device yang diketahui (bluetooth, wifi, lan)
$ ip addr show = $ ip a = kyk ifconfig
$ ip route show = $ route -n = $ netstat -nr = show routing table
$ ip link set <int> down = matiin wifi atau lan contoh : $ sudo ip link set ens3 down
$ ip link set <int> up = nyalain wifi atau lan
$ route add -net <ip> netmask <netip> gw <defaultgateway> def <device/wl01> = $ ip route add <ip/mask> via <defaultgateway> def <device/wl01> = set ip statis
setelah itu $ service network restart
$ route del -net address = $ ip route del = del ip statis 
$ host <url> = lihat ip address url
$ nslookup <url> = lihat ip address url
$ dig <url> = lihat info tentang url
$ ping 8.8.8.8 atau $ ping google.com = ping ke google
-c $ ping -c 3 8.8.8.8 = ping cuma sebanyak 3 kali
$ ifconfig = check networking
$ ifconfig eth0 192.168.1.5 netmask 255.255.255.0 up = set ip statis setelah itu $ service network restart
$ sudo ethtool <ethid> = lihat info tentang ethernet port
$ tcpdump = kayak wireshark di linux
-c $ tcpdump -c <x> = ambil sejumlah x packet jaringan pertama
-A $ tcpdump -A = tampilkan dalam bentuk format aslinya
$ traceroute <iptarget/url> = check route ip
$ tcpdump -c <x> -A <wl01> = seperti sebelumnya namun fokus hanya pada interface yg dipilih dalam hal ini wifi aja
-XX $ tcpdump -XX -i <wl01>  = tampilkan dalam bentuk hex dan asci format
$ tcpdump -i <wl01> port <xxxx> = target ke port tertentu saja
$ netstat = aplikasi buat liat jaringan network
$ netstat -nr = perlihatkan berdasarkan routing table
$ netstat -i = perlihatkan berdasarkan interface (wireless/lan/loop)
$ netstat -ta = perlihatkan berdasarkan active socket
$ netstat -tan = perlihatkan berdasarkan active socket dan tampilkan dalam ip address
$ nmap <iptarget> = perlihatkan open port
-v (verbose) $ nmap = (verbose = lengkap) perlihatkan juga proses pencarian open port
, $ nmap <192.168.2.1,76,xx> = memperlihatkan beberapa device dalam satu command
$ nmap <192.168.2.*> = memperlihatkan semua device dalam satu dhcp
$ nmap google.com = bisa juga nmap untuk website
-iL $ nmap -iL /dir/file.txt = bisa juga jalankan nmap dari file
contoh format file.txt :
google.com 
192.168.2.1
-sP $ nmap -sP <192.168.10.1/24>

$ arp -a = check arp (ip dan mac yang terdaftar di komp)

repository debian dpkg
$ apt = versi lebih baru dan bagus hanya untuk debian
$ apt update kemudian $ apt install <aplikasi> = hanya mengupdate aplikasi tertentu
$ apt upgrade
$ apt full-upgrade = menjalankan apt upgrade dan apt autoremove
$ apt-get = command untuk install tapi sudah kuno diganti dengan yang baru yaitu apt
$ apt-get install <aplikasi> = install aplikasi
$ apt-get remove <aplikasi> = uninstall aplikasi
$ apt-get purge <aplikasi> = uninstall dan hapus
$ sudo apt-get autoremove --purge <aplikasi> = membuang program seluruhnya dan membuang dependencies juga
$ sudo apt-get update = check update
$ sudo apt-get upgrade = mendonload dan upgrade hasil check update
$ sudo apt-get update && apt-get upgrade = update kemudian upgrade dalam satu line
$ apt-cache search <x> = buat cari file program yang terinstall kata kunci x
    atau bisa juga $ apt search <x> = versi yang lebih baru
$ apt-cache policy <x> = liat versi aplikasi x
    atau $ apt policy <x>
S sudo apt show <program> = tanya itu program apa
$ sudo apt edit-sources = lihat sumber download apt bisa juga di edit kalau mau tambah repo
$ sudo apt list = lihat semua aplikasi yang ada di repo
$ sudo apt list --installed = lihat aplikasi yang telah di install
$ sudo dpkg -i lokasifile/namafile = install dpkg melalui terminal
untuk membersihkan installer yang rusak
    $sudo apt-get clean && sudo apt-get autoremove
        atau bisa juga
            $ apt clean && apt autoremove
        kemudian
    $sudo apt-get -f install = menginstall aplikasi yang corrup. -f = fix
        atau
            $ apt -f install
install dari github
$ github clone <url>
    baca dulu readme kemudian kalau ada requirements.txt lihat di readme install pake apa dan versi berapa misalnya npm atau pipe
        $pip3 install -r requirements.txt
            kemudian jalankan
                $ python3 turbolister.py
Synaptic = debian packet manager = install manager untuk debian


User admin
$ su <userlain> = ganti user
$ su - <userlain> = dan ke home folder user tersebut
$ sudo su = sudo root = ganti jadi root
$ sudo visudo = buka file daftar user yang bs jadi sudo 
contoh : pujas All = All (untuk jadiin root) atau pujas All = /sbin/adduser (kalau cuma mau kasih satu perintah)
$ sudo adduser <namauserbaru> = tambah atau buat user account baru
$ sudo adduser <namauserbaru> sudo = tambah atau buat user account baru yang bisa akses sudo
$ sudo userdel <namauser> = hapus user tapi sebaiknya jangan dipakai kalau mau pakai sebaiknya :
-r $ sudo userdel -r <namauser> = hapus user dan home foldernya
    atau
$ sudo deluser <namauser> = menghapus user
$ sudo passwd <namauser> = ganti password user
    $ passwd -l <namauser> = kunci user supaya gak bisa login
    $ passwd -u <namauser> = buka kunci supaya bisa login lagi
$ sudo addgroup <namagrup> = buat grup baru lebih user friendly
$ sudo groupadd <namagrup> = buat grup baru
$ sudo groupdel <grup> = del grup
$ sudo adduser <namauserbaru> <namagrup> = tambah user baru dan tambah ke grup
$ sudo useradd <namauserbaru> = tambah user tapi cuma gitu aja sebaiknya gak pakai
-m $ sudo useradd <namauserbaru> -m = tambah user dan buat home directory 
--shell $ sudo usermod <namauser> --shell /bin/bash = ganti pass ke bash
-l $ sudo usermod -l <namauserbaru> <namauserlama> = ganti nama user
-aG $ sudo usermod -aG <grup> <user> = tambahin user ke grup baru
$ sudo gpasswd -d <user> <group> = mengeluarkan user dari group
    atau
$ sudo usermod -G <namauser> <namagrup> <namagrup1> = grup yang gak disebutkan berarti bakal dikeluarkan
$ chgrp <grup> <file> = pindah grup <file> ke dalam <grup>
$ last = liat siapa yang login terakhir
$ chage --list <user> = lihat kapan passowrd expire
$ sudo chage -E 2030-31-12 <user> = set password expire. Silahkan --help check simple kok

permission 
file r=bisa buka, w=bisa tulis, x=bisa jalankan atau run
folder r=bisa ls, w=bisa cp,rm,mkdir, x=bisa cd
$ sudo chown <user>:<group> <file.txt> = ganti owner
$ sudo chown -R <user>:<group> <./Dir> = -R berarti ganti beserta isi yang ada di dalam folder dir
drwxrwxrwx = huruf 1 d kalau folder kalau file dia -, huruf 2-4 permission untuk owner, huruf 5-7 permission untuk group, huruf 8-0 permission untuk (publik) yang lain
1234567890
$ sudo chmod 644 <file.txt> = ganti file permission 4 read only, 6 read n write, angka pertama untuk owner, angka kedua untuk group, angka ketiga untuk publik
info lanjut jumlah saja dibawah untuk mendapatkan kombinasi chmod yang diinginkan
r (read) – 4
w (write) – 2
x (execute) – 1
    atau
$ sudo chmod <ugoa+-=rwx>,<ugoa+-=rwx>,<ugoa+-=rwx> <file>
    u = user
    g = user lain yang ada di group
    o = user lain yang tidak ada di group
    a = semua user
        kalau dikosongin maka default = a / semua user
    + = tambah mode
    - = kurang mode
        contoh sudo chmod u=rx,go-w = membuat user lain untuk tidak bisa mengedit

find = cari file dan folder di linux 
 
$ find = kasih lihat semua file dan folder di current directory (bisa pake titik atau ngak sama aja)
$ find / = cari semua file dalam satu komputer
$ find namadirectory/dir2/dll = kasih lihat semua file dan folder di directory yang dipilih
contoh kombinasi $ find /etc -type f -iname "file.txt"
$ find . -type d = kasih lihat semua folder aja
$ find . -type f = kasih lihat semua file aja
$ find . -type f -name "<file.typefile>" = mencari file.filetype di dalam current directory
$ find . -type f -name "<file*>" = * berarti bisa apapun sehingga hasilnya mencari semua file yang ada kata "file" di dalam namanya
$ find . -type f -iname "<file*>" = i berarti case insensitive berarti mau huruf besar atau kecil tetap dicari
$ find . -type f -iname "<*.filetype>" = mencari berdasarkan tipe filenya
$ find . -type f -iname -not "<file>" = mencari yang bukan file tersebut
$ find . -type f -iname -mmin -x = cari file yang dimodif dalam waktu kurang dari x menit terakhir
$ find . -type f -iname -mmin +y = cari file yang dimodif dalam waktu lebih dari y menit
$ find . -type f -iname -mmin -x +y = cari file yang dimodif dalam waktu kurang dari x menit terakhir dan lebih dari y menit
$ find . -type f -iname -mtime -x = cari file yang dimodif dalam waktu kurang dari x hari terakhir
    contoh $ find . -mtime 0 = cari file yang dimodif hari ini atau kurang dari sehari
$ find . -type f -iname -ctime -x = idem tapi waktu terakhir changed bukan modif perebedaan modif dengan change modif itu isinya, kalau change bisa jadi cuma permission tapi isinya gak berubah
$ find . -type f -iname -atime -x = idem tapi waktu terakhir dibaca atau dibuka (last read)
$ find . -size +xM = cari file yang besarnya lebih dari x MB 
$ find . -size -yM = cari file yang besarnya kurang dari y MB 
$ find . -size +xK = x kilobite
$ find . -size +xG = x Gigabite
$ find . -empty = cari file kosong yang gak ada isinya
$ find . -perm xxx = cari file berdasarkan permission, xxx = nilai permission contoh 777
    untuk find -ok ataupun exec di paling belakang harus ada placeholder {} yang berfungsi sebagai hasil untuk digunakan (mirip piping) kemudian harus ada penutup \; atau ';' atau +
$ find . -ok <perintah> \;= seperti exec tapi dia ada pertanaan r u sure? supaya bisa cek satu persatu file
$ find . -exec chown = eksekusi perintah dalam ini contohnya chown atau ganti pemilik
$ find . -exec chown <user>:<grup> {} + = ganti user dan grup file yang dicari kemudian harus pakai placeholder untuk hasil {} dan perintah selesai dengan + atau \; 
$ find . -type d -exec chown <775> {} + = ganti permission ke 775 (contoh) semua folder yang ditemukan
$ find . -type f -iname "<*.filetype>" -maxdepth 1 = cari berdasarkan filetype hanya di folder ini (maxdepth 1) kalau (maxdepth 2) berarti dengan subfolder berikutnya dan seterusnya maxdepth x
$ find . -delete = menghapus semua file yang ditemukan

$ grep = cari kata dalam file

$ grep "<kata yang dicari>" <namafile.filetype> = cari semua kata yang ada di dalam file
contoh $ grep "john williams" names.txt
-w $ grep -w "<kata yang dicari>" <namafile.filetype> = hanya ambil yang sama persis
contoh klo ada johny sementara kata kunci yang dignakan john maka johny tidak tercari
-i (insensitive) $ grep -wi "<kata yang dicari>" <namafile.filetype> = huruf kapital atau bukan tetap diambil
-n (line) $ grep -win "<kata yang dicari>" <namafile.filetype> = tampilkan jumlah baris dimana angka tersebut berada
-B $ grep -win -B x "<kata yang dicari>" <namafile.filetype> = tampilkan sejumlah x line sebelumnya juga
-A $ grep -win -A x "<kata yang dicari>" <namafile.filetype> = tampilkan sejumlah x line setelahnya juga
-C $ grep -win -C x "<kata yang dicari>" <namafile.filetype> = tampilkan sejumlah x line sebelum dan setelahnya juga
-v = (invert) cari selain kata kunci
-e = $ grep -e <pattern> -e <pattern2> <file> = kalau ada lebih dari 1 pattern 
    cth $ grep -e ^ts -e st$ /etc/services
[0-9] = cari line yang memiliki nomor 1 sampai 9 di dalamnya
$ grep -win "<kata yang dicari>" ./*.txt = mencari dalam folder tertentu
-r $ grep -winr "<kata yang dicari>" ./*.txt = mencari dalam folder dan subfoldernya
-l $ grep -wirl "<kata yang dicari>" . = hanya tampilkan nama file dan folder yang ditemukan
-c $ grep -wirc "<kata yang dicari>" . = tampilkan berapa kali nama tersebut berulang

- exec = mengeksekusi hasil dari perintah pertama kemudian menjalan perintah kedua
$ find . -type f -iname "*.filetype" -maxdepth x -exec rm {} + = delete semua file dari hasil pencarian
$ find . -type f -iname "*.filetype" -exec grep -i -n "function" {} + = cari kata tertentu dari hasil file yang dicari

tee file.txt = mengambil output dari perintah sebelumnya kemudian ditampilkan pada terminal dan di safe dalam file.txt
-a (append) $ tee -a file.txt = menambah hasil output ke dalam file 

$ find . -type f -size -10k -iname "*" -exec grep -tn "sandwich" {} + | tee f.txt
= hasil dari find file dan grep diatas ditampilkan dalam terminal dan disimpan dalam file f.txt

> arrow = hasil tidak ditampilkan di terminal melainkan di safe menjadi file.txt
contoh $ ls > file.txt = menyimpan hasil ls ke dalam file.txt
contoh $ find . -type f -size -10k -iname "*" -exec grep -tn "sandwich" {} + > f.txt
= hasil dari find file dan grep diatas disimpan dalam file f.txt

Regex posix grep
langsung aja pake contoh biar gampang jelasin
"the quick brown fox jumped over the lazy dog."
. = character apa aja, cth : a.. = azy
| = atau, cth : b.|j. = br dan ju
^ = awal kata, ^.. = the
$ = akhir kata, ..$ = dog
* = lanjut sampai akhir kalimat = l.* = lazy dog.
l.*y = lazy
the.* = the quick brown fox jumped over the lazy dog.
Regex perl -P (python regex) grep
-P $ grep -P "\d{3}-\d{3}-\d{4}" names.filetype = hasil yang didapat contohnya 123-456-7891
untuk mengaktifkan grep -P harus grep version gnu klo blum upgrade atau download dulu, untuk mac pake $ brew install grep --with-default-names
bisa dikombinasi dengan yang lainya contohnya $ grep -wirlP "\d{3}-\d{3}-\d{4}" names.filetype

curl
curl -i http://..... = menjalankan curl untuk melihat server. -i artinya include server name, cookies, tanggal, httpversion dll
curl -o saved.html https://www.google.com = simpan hasil buka website dan download menjadi saved.html, -0 = output disimpan

backup
rsync
rsync membuat duplikate file atau folder untuk kepentingan backupnya
$ rsync <folderyangmaudibackup/*> <backupfolder/>
-r = $ rsync -r <folderyangmaudibackup/> <backupfolder/> = recursif copy termasuk folder yang di falamnya
tanpa/ = $ rsync -r <folderyangmaudibackup> <backupfolder/> = tanpa / dibelakang maka bikin folder di dalam backupfolder
-a = archive (termasuk permission dll)
-v = verbose
--dry-run = $ rsync -av --dry-run <folderyangmaudibackup/> <backupfolder/> = memperlihatkan file apa saja yang akan dicopy, untuk melihatnya jangan lupa -v verbose
--delete = $ rsync -av --delete <folderyangmaudibackup/> <backupfolder/> = membuang file yang tidak ada di folder yang mau dibackup. Harus hati2 karena bisa menghapus file backup
-z = compress file
-p = kasih lihat progress
disk to disk copying
$ dd if=/dev/sda of=/dev/sdb 
hati2 karena disk to disk bakal format (hapus) dulu file yang ada di disk yang akan dicopy

SSH dan ssh dengan keygen

$ ssh -V = check versi ssh
kalo stuck karena pernah ssh ke komp lain: $ ssh-keygen -R 192.168.x.yyy (x.yyy ip komp target baru)
$ ssh-keygen = buat ssh key
    -t $ ssh-keygen -t rsa = type rsa
    -b $ ssh-keygen -b 4096 = bite semakin banyak maka semakin secure 
$ ssh-add ~/.ssh/<privatekeybaru> = tambah ssh key baru apabila ada ssh key yang lain
    kalau keluar "could not open a connection to your authentication agent
        $ eval `ssh-agent -s` = mengaktifkan ssh agent dan agent memberikan kita id
        kemudian baru ssh-add ~/.ssh<privatekeybaru> 
$ ssh username@targetip = login ke pc lain menggunakan ssh
$ scp ~/folder/file.filetype username@targetip:/folder/namafileyangdicopy.filetype = copy file dari satu komp ke komp lain menggunakan ssh
contoh $ scp ~/.ssh/id_rsa.pub coreyms@192.168.56.100:/home/coreyms/.ssh/uploaded_key.pub
setelah dicopy filenya, file harus append ke file baru
$ cat ~/folder/file.filetype >> ~/foler/filebaru
contoh $ cat ~/.ssh/uploaded_key.pub >> ~/.ssh/authorized_keys
folder harus dalam permission 700 cara gantinya :
$ chmod 700 folder 
contohnya $ chmod 700 ~/.ssh/
file harus dalam permission 600 cara gantinya :
$ chmod 600 file 
contohnya $ chmod 600 ~/.ssh/*
kemudian untuk lebih aman matikan ssh dengan menggunakan password dengan cara mengedit config ssh yang ada di (linux : /etc/ssh/sshd_config) sebaiknya dicopy dulu backupnya dengan cara:
$ cp /etc/ssh/sshd_config /etc/ssh/sshd_config.bak
ganti #PasswordAuthentication yes menjadi PasswordAuthentication no (jangan lupa hilangkan hastag)
setelahnya restart $ sudo service ssh restart
    atau
    $ sudo systemctl reload sshd

    cara gampang yang otomatis

$ ssh-copy-id <username>@<iptarget> = langsung copy otomatis ga usah pake yang diatas kemudian masukin password sekali aja untuk pertama kali kemudian otomatis
contoh $ ssh-copy-id coreyms@192.168.58.101

    ssh ke github
pertama harus buat keygen baru dengan server yang buat bukan pc kita, kalau gak bisa maka folder ssh harus chown ke user yang buat key
kemudian file.pub dicopy ke github dan kemudian git clone

proses
$ top = task manager dalam terminal realtime
$ top | head = melihat ringkasan top hanya 10 line teratas
    shortcut dalam top :
        1 = memperlihatkan per thread atau per core
        t = menyederhanakan thread atau core
        m = menyederhanakan memory
        A = mengatur berdasarkan penggunaan terbanyak
        r = renice ganti prioritas
        k = kill spesific proses
        f = list configurasi 
        o = interactively select new set order
ps = process status (kayak top tapi gak live)
$ ps aux (BSD syntax) = lihat semua process dalam terminal offline 
-a. View processes of all users rather than just the current user.
-u. Provide detailed information about each of the processes
-x. Include processes that are controlled not by users but by daemons.
$ ps -e (standart syntax) = lihat semua process
$ ps -eLF = lihat info per thread
$ ps axo <custom1,custom2,....> = memperlihatkan berdasarkan pilihan sendiri lihat man ps biar jelas
$ ps aux | grep <namayangdicari> = menfilter hasil dengan hanya menampilkan namayangdicari
$ pgrep <namaprogram> = menampilkan PID proses id program yang dicari, kalau program yang sama jalan lebih dari satu maka pid juga lebih dari satu, urutan menurut waktu jadi yang dibuka pertama akan ada diatas sementara yang terakhir akan ada dibelakang
$ ps fax = memperlihatkan proses dengan parent childnya 
$ pstree = memperlihatkan proses dengan tree jadi kelihatan parent childrennya 
?$ pkill <namaprogram> = mematikan proses berdasarkan namaprogram
$ kill <pid1> <pid2> = mematikan proses berdasarkan id bisa beberapa sekaligus
$ kill -9 <pid> = $ kill -SIGKILL <pid> = mematikan proses meskipun unresponsive
contoh $ kill -9 6300 = mematikan proses dengan id 6300
$ killall <namaprogram> = mematikan semua program berdasarkan nama program
$ renice <ni> <pid> = mengubah prioritas process ni berkisar -20 sampai +19 dengan -20 paling utama dan +19 paling rendah
$ jobs = kasih liat background process
$ jobs -l = lebih lengkap ada pid
$ w = ngeliat pemakaian komp dalam beberapa menit terakhir
    format baca : load average <1_menit_terakhir> <5menit> <15menit>
    kalau core 1 maka 100%=1.0 kalau 4 core maka 100%= 4.0 kalau lebih dari jumlah core berarti pemakaian besar sehingga ngantri
$ uptime = lihat komputer sudah nyala berapa lama
CTRL-Z = menghentikan sementara program yang berjalan di terminal
$ bg = membuat file berjalan di background (berguna apabila mau menjalankan aplikasi lain tapi sebelumnya harus CTRL-Z untuk disetop dulu)
$ fg = membuat file berjalan di foreground (terminal terhenti)

Daemons 
service atau systemctl = menjalankan servis pilih salah satu antaranya saja tapi disarankan systemctl
$ sudo service <namaprogram> start = menjalankan service
$ sudo service <namaprogram> stop = menghentikan service
$ sudo service <namaprogram> restart = merestart service
$ sudo systemctl start <namaprogram> = menjalankan daemon
$ sudo systemctl stop <namaprogram> = menghentikan daemon
$ sudo systemctl restart <namaprogram> = merestart daemon
$ sudo systemctl reload <namaprogram> = mengupdate perubahan setting
$ sudo systemctl reload-or-restart <namaprogram> = reload kalau ga bisa restart
$ sudo systemctl status <namaprogram> = melihat status daemon
$ sudo systemctl enable <namaprogram> = membuat program otomatis berjalan saat komp nyala
$ sudo systemctl disable <namaprogram> = membuat program tidak langsung berjalan saat komp nyala
$ sudo systemctl is-active <namaprogram> = melihat apakah program berjalan
$ sudo systemctl is-enabled <namaprogram> = melihat apakah program otomatis dimulai saat komp nyala
$ sudo systemctl list-units = lihat semua daemons yang teregistrasi dalam ram (active,listening,closed,waiting)
-t $ sudo systemctl list-units -t <type> = berdasarkan tipe (contoh : service,timer,path)
$ sudo systemctl list-unit-files = lihat semua daemons yang ada di sistem

crontabs
$ crontab -e = buka crontab
format = m h dom mon dow command :
m = menit <0-60>
h = jam <0-24>
dom = hari <1-31>
mon = bulan <1-12>
dow = hari dari minggu <0-7> 0 dan 7 = minggu
command = perintah yang akan dijalankan saat waktu tersebut
contoh : 
15 14 * * * ls > /home/nick/lt/cronres.txt = command akan dijalankan setiap jam 14.15 setiap hari
$ sudo crontab -e = buka crontab dengan root

File penting dalam linux
$ /var/log/auth.log = isinya tentang user login log untuk debian saja, untuk linux lain ada di /var/log/messages and/or /var/log/secure
$ /etc/passwd
    Username	    User login name	
                    Should be between 1 and 32 characters long
    Password	    User password (or the character x if the password is stored in the /etc/shadow file) in encrypted format	    
                    Is never shown in Linux when it is being typed; this stops prying eyes
    User ID (UID)	Every user must have a user id (UID)	
                    UID 0 is reserved for root user
                    UID's ranging from 1-99 are reserved for other predefined accounts
                    UID's ranging from 100-999 are reserved for system accounts and groups
                    Normal users have UID's of 1000 or greater
    Group ID (GID)	The primary Group ID (GID); Group Identification Number stored in the /etc/group file	
    User Info	    This field is optional and allows insertion of extra information about the user such as their name	
                    For example: Rufus T. Firefly
    Home Directory	The absolute path location of user's home directory	
                    For example: /home/rtfirefly
    Shell	        The absolute location of a user's default shell 	
                    For example: /bin/bash
$ /etc/hosts        bisa diganti isinya buat bikin dns sendiri
$ /etc/shadow       hash password
$ /etc/group
$ /etc/network
    /etc/network/interfaces = setting ip static atau dhcp ganti dns dan info interface lainnya
$ /etc/resolv.conf          = melihat dan mengganti dns server   
$ /etc/init.d/<daemon> <option> = lokasi file menjalankan daemon (cthnya ssh) dengan option : start,stop,reload,restart,force-reload
$ /etc/netplan      didalam folder tersebut terdapat yaml file yang bisa buat ganti default gateway, dns
$ /etc/environment  isinya Path, global bisa diconfigurasi pake bash
    check type os dari etc = $ cat /etc/*issue
    check versi os dari etc = $ cat /etc/*release
    check nama host dari etc = $ cat /etc/hostname
    check nama os dan versi dari proc =$ cat /proc/version
    check processor dari proc = $ cat /proc/cpuinfo
    check uptime dari proc = $ cat /proc/uptime
    dll /proc/interrupts
        /proc/meminfo
        /proc/mounts
        /proc/partitions
    check dns = $ systemd-resolve --status
        
membuat command sendiri
buka file .bashrc di home 
    > cari space kosong di setelah if not running interactively tepatnya dibawah esac dan kasih spasi
        > tulis "alias <namacommandbuatan>='<perintah>'"
        contohnya = "alias winhome='cd /mnt/e/pujas/programing'"

Wsl2
$ explorer.exe . = membuka linux wsl2 dengan windows explorer

Ganti resolusi layar melalui grub (bekerja di hyper-v parrot)
$ nano /etc/default/grub
    GRUB_CMDLINE_LINUX_DEFAULT="quiet splash video=hyperv_fb:1600x900"

Ubuntu

Keyboard Mouse Trackpad / touchpad matiin Nyalain ubuntu
$ xinput list = lihat hardware yang mau dimatiin atau nyalain
$ xinput set-prop 15 "Device Enabled" 0 = matiin trackpad
$ xinput set-prop 15 "Device Enabled" 1 = nyalain trackpad

setting default application ubuntu 20
Settings->Default Applications

nautilus (file manager)
CTRL-1 or CTRL-2 = ganti list view dan tumbnailview
CTRL-L = shortcut ke directory text box
CTRL-DEL = shortcut buang file
ALT-F2 = run command

Lock screen ubuntu dan linux
Windows-L
CTRL-ALT F3-F6 = buka virtual terminal dari 3-6 ada 6 channel
CTRL-ALT F1-F2 = kembali ke ubuntu
$ systemctl start gdm = menjalankan GUI 
    atau
    $ telinit 5
$ systemctl start gdm = mematikan GUI
    atau
    $ telinit 3

        Methods of bringing down the GUI:
            student:/tmp> sudo systemctl stop gdm
            student:/tmp> sudo systemctl stop lightdm
            student:/tmp> sudo telinit 3

        Methods of bringing the GUI back up:
            student:/tmp> sudo systemctl start gdm
            student:/tmp> sudo systemctl start lightdm
            student:/tmp> sudo telinit 5
$ shutdown -r = restart komp
$ shutdown -h = halt dan matikan komp

Program penting install debian

$ apt install lsb_release
$ apt install nmap
$ apt install net-tools = ifconfig
$ apt install iputils-ping = ping
$ apt install dnsutils = nslookup
$ apt install checkinstall = klo ada program yang ga bisa di install di repo

compress file
gzip
$ gzip * = compress yang ada di dalam folder
$ gzip -r <dir> = mengcompress semua yang ada di dalam termasuk subfolder
$ gunzip <nama> = ngebuka hasil compress
    atau
    $ gzip -d <nama>
bzip2
$ bzip2 * = compress semua yang ada di dalam folder
$ bunzip2 *.bz2 = decompress / ngebuka
    atau
    $ bzip2 -d <nama>
xz
xz * = compress semua file yang ada di folder satu persatu
xz <file> = compress jadi file.xz default compress level (-6)
xz -d *.xz = decompress
xz -dk file.xz = decompress tanpa delete file xz meskipun sudah berhasil di compress
zip
zip <file> * = compress dan buat jadi file.zip
zip -r <file>.zip ~ = backup home dir recursively
unzip backup.zip = extract
tar
tar zcvf mydir.tar.gz mydir = bikin tar dan compress dengan gzip
tar jcvf mydir.tar.bz2 mydir = bikin tar dan compress dengan bz2
tar Jcvf mydir.tar.xz mydir = bikin tar dan compress dengan xz
tar xvf mydir.tar = buka tar
untuk melihat compress file tambahkan z didepan command berikut yang bisa:
$ zcat <file.txt.gz> = liat file yang dicompress menggunakan cat
$ zless <file.txt.gz> = less file compress
$ zmore <file.txt.gz>
$ zgrep -i less <file.gz> = cari kata di dalam compressed file
$ zdiff <file1.txt.gz> <file2.txt.gz> = membandingkan
untuk bz2 tinggal tambahin bz didepannya cth bzcat bzless bzgrep
untuk xz tinggal tambahin xz didepannya cth xzcat xzless xzgrep


buat file tanpa text editor

$ cat << <penandaapaaja> > file
> line1
> Line2
> <penandaapaaja>
Atau
$ echo line1 > file
$ echo Line2 > file

kedua hal diatas menghasilkan file dengan line1 dan Line2 di dalam isinya

Vim belajar:
https://www.openvim.com/

file operation
$ diff3 <file1> <file2> <file3> = melihat perbedaan antara file kyk git baca man
$ diff -Nur originalfile newfile > patchfile 
$ patch -p1 < patchfile
    atau
    $ patch originalfile patchfile
$ file <dir> = menyebut fungsi sebenarnya file tersebut 

SED
$ sed s/<katalama>/<katabaru> <file> = mengubah katalama pertama di dalam file menjadi kata baru
$ sed 1,2s/<katalama>/<katabaru>/g <file> = mengubah dua baris pertama di dalam file menjadi kata baru 
$ sed s/<katalama>/<katabaru>/g <file> = mengubah seluruh katalama di dalam file menjadi kata baru 
kalau mau save pake > atau >> setelahnya atau pakai -i tapi sebaiknya jangan
bisa juga pake delimiter lain : contohnya $ sed s:<katalama>:<katabaru>:g <file>
-f = sed -f <scriptfile> <filename> = pakai script gak diketik
AWK
$ awk '{ print $0 }' <file> = print semua file
$ awk -F<separator> '{ print $1 }' <file> = -F (field) diikutin separator contohnya ; : spasi tab, kemudian print baris pertama
$ awk -F: '{ print $1 $7 }' <file> = print baris pertama dan ketujuh

$ sort <file> = print isi dalam file namun secara alphabetical a-z per baris
$ cat file1 file2 | sort = sort dua file sekaligus
-r $ sort -r <filename> = reverse terbalik sortnya
-k $ sort -k <n> <filename> = mulai dari baris ke<n>
$ sort file1 file2 | uniq > file3 = gabung dan sort file1 dan file 2 kemudian file yang terduplikasi pada file1 dan file2 dibuang dan dijadikan file3
    atau
-u $ sort -u file1 file2 > file3
$ uniq -c <file> = menhitung jumlah line yang terduplikasi
$ paste <file1> <file2> = gabungin line 1 di file1 dengan line 1 di file2 kemudian line2 di file1 dengan line2 di file2 disetop
$ paste -d<delimiter> file1 file2 = idem namun pilih delimiter atau pemisah
$ join file1 file2 = cek dua file lihat adanya persamaan, kemudian digabungkan sesuai dengan persamaannya
$ wc <file>= hitung jumlah baris kata huruf secara berurutan
$ wc -l <file> = hitung jumlah line yang tedapat di dalam file, opsi lain -c (byte), -m (huruf) 
$ split <file> = membagi file menjadi maks 1000 line, utk settingan lebih lanjut > man
$ string <file> | grep <katakunci> = mengambil kata yang bisa dibaca manusia untuk file yang bukan text
tr
$ tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ = mengubah huruf biasa menjadi huruf kapital
    atau
        $ cat <file> | tr a-z A-Z
$ tr '{}' '()' < inputfile > outputfile = mengubah {} menjadi ()
$ echo "This is for testing" | tr [:space:] '\t' = mengubah spasi menjadi tab
$ echo "This   is   for    testing" | tr -s [:space:] = mengurangi spasi menjadi satu
$ echo "the geek stuff" | tr -d 't' = menghilangkan huruf t
$ tr -cd [:print:] < file.txt = membuang semua non printable character
$ tr -s '\n' ' ' < file.txt = mengubah semua isi file menjadi satu line
tee mengcopyoutput dan cat file secara bersamaan
$ sudo find . -name "test" | tee /tmp/tee_output
cut $ ls -l | cut -d" " -f3 = memperlihatkan baris ke 3 yang di delimiter dengan spasi kosong

non graphical browser linux:
Lynx
Elyks
w3m

bash scripting
buat file hello.sh kemudian di awal file biasanya ada '#!/bin/bash' untuk menunjukkan file bash yang digunakan, kemudian diikuti oleh command contohnya 'echo Hello World'
ubah file jadi executable $ chmod +x hello.sh
untuk menjalankan gunakan $ bash hello.sh atau $ ./hello.sh
kalau file belum executable maka harus pakai $ bash hello.sh
#	digunakan untuk comment, kecuali saat \#, atau #! when starting a script
\	digunakan untuk pindah ke baris berikutnya
;	kalimat setelahnya jadi command untuk dieksekusi berikutnya
$	setelahnya adalah environment variable
>	Redirect output
>>	Append output
<	Redirect input
|	hasil output dijadikan input command berikutnya
&&  and = kalau command berhasil maka jalankan command berikutnya
||  or = kalau command berhasil maka berikutnya gak akan dijalankan
parameter = variable yang dimasukkan setelah bashscript
contoh $ ls file1    maka file1 = $1 atau first parameter
$0	Script name
$1	First parameter
$2, $3, etc.	Second, third parameter, etc.
$*	All parameters
$#	Number of arguments
$?  cek status kalau 0=berhasil, 2=gagal 

cara masukin command di dalam command
$() atau ''
contohnya 
$ ls /lib/modules/'uname -r' = yang ini untuk linux lama gak bisa dipakai buat ubuntu baru
$ ls /lib/modules/$(uname -r) 

environment variable = digunakan sebagai shorcut atau kata kunci supaya lebih pendek atau bila tidak mau memperlihatkan isi aslinya
    temporary environment variable = hanya berlaku sementara kalau quit maka hilang 
        $ env = lihat env variable yang ada
        $ echo $<var> = $ printenv <var> = membuka ke terminal isi dari env var
        $ export <var>=<isi> = <var>=<isi> ; export <var> = $ membuat env variable yang isinya var=isi
        $ unset <var> = membuang var dan isinya dari list env
    User Env variable = env permanen namun hanya berlaku pada user tertentu
        buka ~/.bashrc , kemudian edit masukkan kata dibawah ini lokasi boleh dimana aja baris baru, biasanya diatas isinya, dan di save:
            "export <var>=<isi>"
                $ source ~/.bashrc = update bashrc supaya bisa kebaca yang baru dimasukin
    Global Env variable = env permanen pada semua orang di komputer
        buka /etc/environment, edit file masukkan
            "export <var>=<isi>" 
                $ source /etc/environment

read <var> = menunggu input dari user dan kemudian di simpan dalam var
function = subroutine = command yang dipakai berulang dalam satu program lihat contoh funtion.sh 
check condition dalam if [[]], info lebih lanjut $ man 1 test atau https://kapeli.com/cheat_sheets/Bash_Test_Operators.docset/Contents/Resources/Documents/index
!       logical not berarti membalik hasil true jadi none dan sebaliknya cara pakeknya : [[ ! condition ]]
-e      file	Checks if the file exists.
-d      file	Checks if the file is a directory.
-f      file	Checks if the file is a regular file (i.e. not a symbolic link, device node, directory, etc.)
-s      file	Checks if the file is of non-zero size.
-g      file	Checks if the file has sgid set.
-u      file	Checks if the file has suid set.
-r      file	Checks if the file is readable.
-w      file	Checks if the file is writable.
-x      file	Checks if the file is executable.
-h -L   file is symbolic link
-z      file    string is null
-n      file    string is not null
-O      file    You are the owner of the file
-G      file    Group id same with u
-a  &&  and dan
-o  ||  or atau
-ne     int     not equal to = tidak sama dengan
!=      str     idem
-gt     int     greater than = lebih besar dari
>       str       lebih besar menurut ASCII alphabetical order
-eq     int     equal to = sama dengan
==      str       sama dengan
-ge     int     greater than equal = lebih besar sama dengan
-lt     int     less then = lebih kecil dari
<       str     lebih kecil menurut ASCII alphabetical order
-le     int     less then equal = lebih kecil sama dengan
-nt     file    newer then = file lebih baru daripada file kedua
-ot     file    older then = file lebih tua daripada file kedua
-ef     file    check file is hard link

myLen1=${#string1}	hitung jumlah huruf pada string1 dan simpan dalam myLen1
debugging
bash -x <script.sh>     menjalankan debugging
bisa juga part tertentu debug
set -x      tanda mulai debug
set +x      tanda akhir debug

file stream

stdin	Standard Input, by default the keyboard/terminal for programs run from the command line	    0
stdout	Standard output, by default the screen for programs run from the command line	            1
stderr	Standard error, where output error messages are shown or saved	                            2
cara menyimpan error file :
$ 'program' 2> 'errorfile' = mengambil keterangan error menjadi sebuah file, kalau tidak error akan ditampilkan di terminal meskipun output > file.txt sudah menjadi file.txt
$ 'program' > 'all-output-file' 2>&1 = menyimpan output serta error ke dalam file
    atau yang lebih singkat
        $ 'program' >& 'all-output-file'
/def/null = folder spesial yang dimana kalau di output ke situ bakal hilang
$ 'program' >& /dev/null 

temporary file and folder yang akan dibuang sendiri
$ mktemp /tmp/tempfile.XXXXXXXX = file sementara
--suffix $ mktemp --suffix=.txt /tmp/tempfile.XXXXXXXX = akan menghasilkan file sementara dengan .txt dibelakang
$ mktemp -d /tmp/tempdir.XXXXXXXX = folder sementara

untuk buat random Number Pakai $RANDOM
$ echo $RANDOM

printer
$ sudo systemctl status cups = lihat apakah daemon untuk printing jalan
$ sudo systemctl stop cups = matiin daemon printing jadi gabs print
$ sudo systemctl restart cups = jalankan kembali printing daemon
$ sudo systemctl disable cups = buat agar waktu startup tidak mulai
$ sudo systemctl enable cups = buat agar waktu startup mulai
http://localhost:631 =  edit printer melalui gui browser
cli untuk printing di linux
$ lp <filename>	            To print the file to default printer
$ lp -d printer <filename>	To print to a specific printer (useful if multiple printers are available)
$ program | lp
$ echo string | lp	        To print the output of a program
$ lp -n number <filename>	To print multiple copies
$ lpoptions -d printer	    To set the default printer
$ lpq -a	                To show the queue status
$ lpadmin	                To configure printer queues
$ lpstat -p -d	            To get a list of available printers, along with their status
$ lpstat -a	                To check the status of all connected printers, including job numbers
$ cancel job-id
     OR
$ lprm job-id	            To cancel a print job
$ lpmove job-id newprinter	To move a print job to new printer

postscript dan pdf
$ enscript -p psfile.ps textfile.txt	                            Convert a text file to PostScript (saved to psfile.ps)
$ enscript -n -p psfile.ps textfile.txt	                            Convert a text file to n columns where n=1-9 (saved in psfile.ps)
$ enscript textfile.txt	                                            Print a text file directly to the default printer
$ pdf2ps file.pdf	                                                Converts file.pdf to file.ps
$ ps2pdf file.ps	                                                Converts file.ps to file.pdf
$ pstopdf input.ps output.pdf	                                    Converts input.ps to output.pdf
$ pdftops input.pdf output.ps	                                    Converts input.pdf to output.ps
$ convert input.ps output.pdf	                                    Converts input.ps to output.pdf
$ convert input.pdf output.ps	                                    Converts input.pdf to output.ps
$ qpdf --empty --pages 1.pdf 2.pdf -- 12.pdf	                    Merge the two documents 1.pdf and 2.pdf. The output will be saved to 12.pdf
$ qpdf --empty --pages 1.pdf 1-2 -- new.pdf	                        Write only pages 1 and 2 of 1.pdf. The output will be saved to new.pdf
$ qpdf --rotate=+90:1 1.pdf 1r.pdf                                  Rotate page 1 of 1.pdf 90 degrees clockwise and save to 1r.pdf
$ qpdf --rotate=+90:1-z 1.pdf 1r-all.pdf                            Rotate all pages of 1.pdf 90 degrees clockwise and save to 1r-all.pdf
$ qpdf --encrypt mypw mypw 128 -- public.pdf private.pdf            Encrypt with 128 bits public.pdf using as the passwd mypw with output as private.pdf
$ qpdf --decrypt --password=mypw private.pdf file-decrypted.pdf     Decrypt private.pdf with output as file-decrypted.pdf. 
$ gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite  -sOutputFile=all.pdf file1.pdf file2.pdf file3.pdf     gabungkan 3 file pdf jadi satu
$ gs -sDEVICE=pdfwrite -dNOPAUSE -dBATCH -dDOPDFMARKS=false -dFirstPage=10 -dLastPage=20\           ambil hal 10-20 jadikan file baru
-sOutputFile=split.pdf file.pdf
$ pdfinfo <file>         nama program di apt = poppler-utils        untuk cek info file pdf
    aplikasi lain yang berguna :
    enscript    buat convert text ke postscript
    flpsed      buat edit postscript
    pdfmod      buat edit pdf

grub2 buat bukin password bios   https://help.ubuntu.com/community/Grub2/Passwords Furthermore, you never edit grub.cfg directly; instead, you can modify the configuration files in /etc/grub.d and /etc/defaults/grub, and then run update-grub, or grub2-mkconfig and save the new configuration file.